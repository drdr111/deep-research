def compose_final_answer(question: str, notes: list, memory: dict, gap_notes: list) -> str:
    answer = f"\nüîç –í–æ–ø—Ä–æ—Å: {question}\n"
    answer += "\nüìå –û—Ç–≤–µ—Ç –æ—Å–Ω–æ–≤–∞–Ω –Ω–∞ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–∏ —Å–ª–µ–¥—É—é—â–∏—Ö –∞—Å–ø–µ–∫—Ç–æ–≤:\n"
    for note in notes:
        answer += f"\nüìç {note['topic']}\n"
        for line in note['notes']:
            answer += f"- {line}\n"

    answer += "\nüîÑ –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —É—Ç–æ—á–Ω–µ–Ω–∏—è (gap-filling):\n"
    for line in gap_notes:
        answer += f"- {line}\n"

    answer += "\n‚úÖ –°–≤–æ–¥–Ω—ã–π –≤—ã–≤–æ–¥: (—ç—Ç–æ—Ç –±–ª–æ–∫ –º–æ–∂–Ω–æ –¥–æ–ø–æ–ª–Ω–∏—Ç—å –º–æ–¥–µ–ª—å—é –ø–æ–∑–∂–µ)\n"
    answer += "–≠—Ç–æ—Ç –æ—Ç–≤–µ—Ç –æ—Å–Ω–æ–≤–∞–Ω –Ω–∞ —Å–∏—Å—Ç–µ–º–Ω–æ–º –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–∏ –≤—Å–µ—Ö –∫–ª—é—á–µ–≤—ã—Ö –∞—Å–ø–µ–∫—Ç–æ–≤."
    return answer
